// Generated by jextract

package io.uring;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$47 {

    static final FunctionDescriptor recvfrom$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        MemoryLayout.unionLayout(
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_at__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_ax25__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_dl__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_eon__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_in__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_in6__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_inarp__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_ipx__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_iso__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_ns__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_un__"),
            Constants$root.C_POINTER$LAYOUT.withName("__sockaddr_x25__")
        ),
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle recvfrom$MH = RuntimeHelper.downcallHandle(
        "recvfrom",
        constants$47.recvfrom$FUNC
    );
    static final FunctionDescriptor sendmsg$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle sendmsg$MH = RuntimeHelper.downcallHandle(
        "sendmsg",
        constants$47.sendmsg$FUNC
    );
    static final FunctionDescriptor sendmmsg$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle sendmmsg$MH = RuntimeHelper.downcallHandle(
        "sendmmsg",
        constants$47.sendmmsg$FUNC
    );
    static final FunctionDescriptor recvmsg$FUNC = FunctionDescriptor.of(Constants$root.C_LONG_LONG$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle recvmsg$MH = RuntimeHelper.downcallHandle(
        "recvmsg",
        constants$47.recvmsg$FUNC
    );
    static final FunctionDescriptor recvmmsg$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle recvmmsg$MH = RuntimeHelper.downcallHandle(
        "recvmmsg",
        constants$47.recvmmsg$FUNC
    );
    static final FunctionDescriptor getsockopt$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT
    );
    static final MethodHandle getsockopt$MH = RuntimeHelper.downcallHandle(
        "getsockopt",
        constants$47.getsockopt$FUNC
    );
}


