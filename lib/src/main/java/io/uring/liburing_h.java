// Generated by jextract

package io.uring;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class liburing_h  {

    /* package-private */ liburing_h() {}
    public static OfByte C_CHAR = Constants$root.C_CHAR$LAYOUT;
    public static OfShort C_SHORT = Constants$root.C_SHORT$LAYOUT;
    public static OfInt C_INT = Constants$root.C_INT$LAYOUT;
    public static OfLong C_LONG = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfLong C_LONG_LONG = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfFloat C_FLOAT = Constants$root.C_FLOAT$LAYOUT;
    public static OfDouble C_DOUBLE = Constants$root.C_DOUBLE$LAYOUT;
    public static OfAddress C_POINTER = Constants$root.C_POINTER$LAYOUT;
    public static int _XOPEN_SOURCE() {
        return (int)500L;
    }
    public static int __NR_io_uring_setup() {
        return (int)425L;
    }
    public static int __NR_io_uring_enter() {
        return (int)426L;
    }
    public static int __NR_io_uring_register() {
        return (int)427L;
    }
    public static int IOSQE_FIXED_FILE_BIT() {
        return (int)0L;
    }
    public static int IOSQE_IO_DRAIN_BIT() {
        return (int)1L;
    }
    public static int IOSQE_IO_LINK_BIT() {
        return (int)2L;
    }
    public static int IOSQE_IO_HARDLINK_BIT() {
        return (int)3L;
    }
    public static int IOSQE_ASYNC_BIT() {
        return (int)4L;
    }
    public static int IOSQE_BUFFER_SELECT_BIT() {
        return (int)5L;
    }
    public static int IOSQE_CQE_SKIP_SUCCESS_BIT() {
        return (int)6L;
    }
    public static int IORING_OP_NOP() {
        return (int)0L;
    }
    public static int IORING_OP_READV() {
        return (int)1L;
    }
    public static int IORING_OP_WRITEV() {
        return (int)2L;
    }
    public static int IORING_OP_FSYNC() {
        return (int)3L;
    }
    public static int IORING_OP_READ_FIXED() {
        return (int)4L;
    }
    public static int IORING_OP_WRITE_FIXED() {
        return (int)5L;
    }
    public static int IORING_OP_POLL_ADD() {
        return (int)6L;
    }
    public static int IORING_OP_POLL_REMOVE() {
        return (int)7L;
    }
    public static int IORING_OP_SYNC_FILE_RANGE() {
        return (int)8L;
    }
    public static int IORING_OP_SENDMSG() {
        return (int)9L;
    }
    public static int IORING_OP_RECVMSG() {
        return (int)10L;
    }
    public static int IORING_OP_TIMEOUT() {
        return (int)11L;
    }
    public static int IORING_OP_TIMEOUT_REMOVE() {
        return (int)12L;
    }
    public static int IORING_OP_ACCEPT() {
        return (int)13L;
    }
    public static int IORING_OP_ASYNC_CANCEL() {
        return (int)14L;
    }
    public static int IORING_OP_LINK_TIMEOUT() {
        return (int)15L;
    }
    public static int IORING_OP_CONNECT() {
        return (int)16L;
    }
    public static int IORING_OP_FALLOCATE() {
        return (int)17L;
    }
    public static int IORING_OP_OPENAT() {
        return (int)18L;
    }
    public static int IORING_OP_CLOSE() {
        return (int)19L;
    }
    public static int IORING_OP_FILES_UPDATE() {
        return (int)20L;
    }
    public static int IORING_OP_STATX() {
        return (int)21L;
    }
    public static int IORING_OP_READ() {
        return (int)22L;
    }
    public static int IORING_OP_WRITE() {
        return (int)23L;
    }
    public static int IORING_OP_FADVISE() {
        return (int)24L;
    }
    public static int IORING_OP_MADVISE() {
        return (int)25L;
    }
    public static int IORING_OP_SEND() {
        return (int)26L;
    }
    public static int IORING_OP_RECV() {
        return (int)27L;
    }
    public static int IORING_OP_OPENAT2() {
        return (int)28L;
    }
    public static int IORING_OP_EPOLL_CTL() {
        return (int)29L;
    }
    public static int IORING_OP_SPLICE() {
        return (int)30L;
    }
    public static int IORING_OP_PROVIDE_BUFFERS() {
        return (int)31L;
    }
    public static int IORING_OP_REMOVE_BUFFERS() {
        return (int)32L;
    }
    public static int IORING_OP_TEE() {
        return (int)33L;
    }
    public static int IORING_OP_SHUTDOWN() {
        return (int)34L;
    }
    public static int IORING_OP_RENAMEAT() {
        return (int)35L;
    }
    public static int IORING_OP_UNLINKAT() {
        return (int)36L;
    }
    public static int IORING_OP_MKDIRAT() {
        return (int)37L;
    }
    public static int IORING_OP_SYMLINKAT() {
        return (int)38L;
    }
    public static int IORING_OP_LINKAT() {
        return (int)39L;
    }
    public static int IORING_OP_MSG_RING() {
        return (int)40L;
    }
    public static int IORING_OP_FSETXATTR() {
        return (int)41L;
    }
    public static int IORING_OP_SETXATTR() {
        return (int)42L;
    }
    public static int IORING_OP_FGETXATTR() {
        return (int)43L;
    }
    public static int IORING_OP_GETXATTR() {
        return (int)44L;
    }
    public static int IORING_OP_SOCKET() {
        return (int)45L;
    }
    public static int IORING_OP_URING_CMD() {
        return (int)46L;
    }
    public static int IORING_OP_SEND_ZC() {
        return (int)47L;
    }
    public static int IORING_OP_LAST() {
        return (int)48L;
    }
    public static int IORING_MSG_DATA() {
        return (int)0L;
    }
    public static int IORING_MSG_SEND_FD() {
        return (int)1L;
    }
    public static int IORING_CQE_BUFFER_SHIFT() {
        return (int)16L;
    }
    public static int IORING_REGISTER_BUFFERS() {
        return (int)0L;
    }
    public static int IORING_UNREGISTER_BUFFERS() {
        return (int)1L;
    }
    public static int IORING_REGISTER_FILES() {
        return (int)2L;
    }
    public static int IORING_UNREGISTER_FILES() {
        return (int)3L;
    }
    public static int IORING_REGISTER_EVENTFD() {
        return (int)4L;
    }
    public static int IORING_UNREGISTER_EVENTFD() {
        return (int)5L;
    }
    public static int IORING_REGISTER_FILES_UPDATE() {
        return (int)6L;
    }
    public static int IORING_REGISTER_EVENTFD_ASYNC() {
        return (int)7L;
    }
    public static int IORING_REGISTER_PROBE() {
        return (int)8L;
    }
    public static int IORING_REGISTER_PERSONALITY() {
        return (int)9L;
    }
    public static int IORING_UNREGISTER_PERSONALITY() {
        return (int)10L;
    }
    public static int IORING_REGISTER_RESTRICTIONS() {
        return (int)11L;
    }
    public static int IORING_REGISTER_ENABLE_RINGS() {
        return (int)12L;
    }
    public static int IORING_REGISTER_FILES2() {
        return (int)13L;
    }
    public static int IORING_REGISTER_FILES_UPDATE2() {
        return (int)14L;
    }
    public static int IORING_REGISTER_BUFFERS2() {
        return (int)15L;
    }
    public static int IORING_REGISTER_BUFFERS_UPDATE() {
        return (int)16L;
    }
    public static int IORING_REGISTER_IOWQ_AFF() {
        return (int)17L;
    }
    public static int IORING_UNREGISTER_IOWQ_AFF() {
        return (int)18L;
    }
    public static int IORING_REGISTER_IOWQ_MAX_WORKERS() {
        return (int)19L;
    }
    public static int IORING_REGISTER_RING_FDS() {
        return (int)20L;
    }
    public static int IORING_UNREGISTER_RING_FDS() {
        return (int)21L;
    }
    public static int IORING_REGISTER_PBUF_RING() {
        return (int)22L;
    }
    public static int IORING_UNREGISTER_PBUF_RING() {
        return (int)23L;
    }
    public static int IORING_REGISTER_SYNC_CANCEL() {
        return (int)24L;
    }
    public static int IORING_REGISTER_FILE_ALLOC_RANGE() {
        return (int)25L;
    }
    public static int IORING_REGISTER_LAST() {
        return (int)26L;
    }
    public static int IO_WQ_BOUND() {
        return (int)0L;
    }
    public static int IO_WQ_UNBOUND() {
        return (int)1L;
    }
    public static int IORING_RESTRICTION_REGISTER_OP() {
        return (int)0L;
    }
    public static int IORING_RESTRICTION_SQE_OP() {
        return (int)1L;
    }
    public static int IORING_RESTRICTION_SQE_FLAGS_ALLOWED() {
        return (int)2L;
    }
    public static int IORING_RESTRICTION_SQE_FLAGS_REQUIRED() {
        return (int)3L;
    }
    public static int IORING_RESTRICTION_LAST() {
        return (int)4L;
    }
    public static MethodHandle io_uring_get_probe_ring$MH() {
        return RuntimeHelper.requireNonNull(constants$0.io_uring_get_probe_ring$MH,"io_uring_get_probe_ring");
    }
    public static MemoryAddress io_uring_get_probe_ring ( Addressable ring) {
        var mh$ = io_uring_get_probe_ring$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ring);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_get_probe$MH() {
        return RuntimeHelper.requireNonNull(constants$0.io_uring_get_probe$MH,"io_uring_get_probe");
    }
    public static MemoryAddress io_uring_get_probe () {
        var mh$ = io_uring_get_probe$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_free_probe$MH() {
        return RuntimeHelper.requireNonNull(constants$0.io_uring_free_probe$MH,"io_uring_free_probe");
    }
    public static void io_uring_free_probe ( Addressable probe) {
        var mh$ = io_uring_free_probe$MH();
        try {
            mh$.invokeExact(probe);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_opcode_supported$MH() {
        return RuntimeHelper.requireNonNull(constants$0.io_uring_opcode_supported$MH,"io_uring_opcode_supported");
    }
    public static int io_uring_opcode_supported ( Addressable p,  int op) {
        var mh$ = io_uring_opcode_supported$MH();
        try {
            return (int)mh$.invokeExact(p, op);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_queue_init_params$MH() {
        return RuntimeHelper.requireNonNull(constants$0.io_uring_queue_init_params$MH,"io_uring_queue_init_params");
    }
    public static int io_uring_queue_init_params ( int entries,  Addressable ring,  Addressable p) {
        var mh$ = io_uring_queue_init_params$MH();
        try {
            return (int)mh$.invokeExact(entries, ring, p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_queue_init$MH() {
        return RuntimeHelper.requireNonNull(constants$0.io_uring_queue_init$MH,"io_uring_queue_init");
    }
    public static int io_uring_queue_init ( int entries,  Addressable ring,  int flags) {
        var mh$ = io_uring_queue_init$MH();
        try {
            return (int)mh$.invokeExact(entries, ring, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_queue_mmap$MH() {
        return RuntimeHelper.requireNonNull(constants$1.io_uring_queue_mmap$MH,"io_uring_queue_mmap");
    }
    public static int io_uring_queue_mmap ( int fd,  Addressable p,  Addressable ring) {
        var mh$ = io_uring_queue_mmap$MH();
        try {
            return (int)mh$.invokeExact(fd, p, ring);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_ring_dontfork$MH() {
        return RuntimeHelper.requireNonNull(constants$1.io_uring_ring_dontfork$MH,"io_uring_ring_dontfork");
    }
    public static int io_uring_ring_dontfork ( Addressable ring) {
        var mh$ = io_uring_ring_dontfork$MH();
        try {
            return (int)mh$.invokeExact(ring);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_queue_exit$MH() {
        return RuntimeHelper.requireNonNull(constants$1.io_uring_queue_exit$MH,"io_uring_queue_exit");
    }
    public static void io_uring_queue_exit ( Addressable ring) {
        var mh$ = io_uring_queue_exit$MH();
        try {
            mh$.invokeExact(ring);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_peek_batch_cqe$MH() {
        return RuntimeHelper.requireNonNull(constants$1.io_uring_peek_batch_cqe$MH,"io_uring_peek_batch_cqe");
    }
    public static int io_uring_peek_batch_cqe ( Addressable ring,  Addressable cqes,  int count) {
        var mh$ = io_uring_peek_batch_cqe$MH();
        try {
            return (int)mh$.invokeExact(ring, cqes, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_wait_cqes$MH() {
        return RuntimeHelper.requireNonNull(constants$1.io_uring_wait_cqes$MH,"io_uring_wait_cqes");
    }
    public static int io_uring_wait_cqes ( Addressable ring,  Addressable cqe_ptr,  int wait_nr,  Addressable ts,  Addressable sigmask) {
        var mh$ = io_uring_wait_cqes$MH();
        try {
            return (int)mh$.invokeExact(ring, cqe_ptr, wait_nr, ts, sigmask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_wait_cqe_timeout$MH() {
        return RuntimeHelper.requireNonNull(constants$1.io_uring_wait_cqe_timeout$MH,"io_uring_wait_cqe_timeout");
    }
    public static int io_uring_wait_cqe_timeout ( Addressable ring,  Addressable cqe_ptr,  Addressable ts) {
        var mh$ = io_uring_wait_cqe_timeout$MH();
        try {
            return (int)mh$.invokeExact(ring, cqe_ptr, ts);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_submit$MH() {
        return RuntimeHelper.requireNonNull(constants$2.io_uring_submit$MH,"io_uring_submit");
    }
    public static int io_uring_submit ( Addressable ring) {
        var mh$ = io_uring_submit$MH();
        try {
            return (int)mh$.invokeExact(ring);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_submit_and_wait$MH() {
        return RuntimeHelper.requireNonNull(constants$2.io_uring_submit_and_wait$MH,"io_uring_submit_and_wait");
    }
    public static int io_uring_submit_and_wait ( Addressable ring,  int wait_nr) {
        var mh$ = io_uring_submit_and_wait$MH();
        try {
            return (int)mh$.invokeExact(ring, wait_nr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_submit_and_wait_timeout$MH() {
        return RuntimeHelper.requireNonNull(constants$2.io_uring_submit_and_wait_timeout$MH,"io_uring_submit_and_wait_timeout");
    }
    public static int io_uring_submit_and_wait_timeout ( Addressable ring,  Addressable cqe_ptr,  int wait_nr,  Addressable ts,  Addressable sigmask) {
        var mh$ = io_uring_submit_and_wait_timeout$MH();
        try {
            return (int)mh$.invokeExact(ring, cqe_ptr, wait_nr, ts, sigmask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_register_buffers$MH() {
        return RuntimeHelper.requireNonNull(constants$2.io_uring_register_buffers$MH,"io_uring_register_buffers");
    }
    public static int io_uring_register_buffers ( Addressable ring,  Addressable iovecs,  int nr_iovecs) {
        var mh$ = io_uring_register_buffers$MH();
        try {
            return (int)mh$.invokeExact(ring, iovecs, nr_iovecs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_register_buffers_tags$MH() {
        return RuntimeHelper.requireNonNull(constants$2.io_uring_register_buffers_tags$MH,"io_uring_register_buffers_tags");
    }
    public static int io_uring_register_buffers_tags ( Addressable ring,  Addressable iovecs,  Addressable tags,  int nr) {
        var mh$ = io_uring_register_buffers_tags$MH();
        try {
            return (int)mh$.invokeExact(ring, iovecs, tags, nr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_register_buffers_sparse$MH() {
        return RuntimeHelper.requireNonNull(constants$2.io_uring_register_buffers_sparse$MH,"io_uring_register_buffers_sparse");
    }
    public static int io_uring_register_buffers_sparse ( Addressable ring,  int nr) {
        var mh$ = io_uring_register_buffers_sparse$MH();
        try {
            return (int)mh$.invokeExact(ring, nr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_register_buffers_update_tag$MH() {
        return RuntimeHelper.requireNonNull(constants$3.io_uring_register_buffers_update_tag$MH,"io_uring_register_buffers_update_tag");
    }
    public static int io_uring_register_buffers_update_tag ( Addressable ring,  int off,  Addressable iovecs,  Addressable tags,  int nr) {
        var mh$ = io_uring_register_buffers_update_tag$MH();
        try {
            return (int)mh$.invokeExact(ring, off, iovecs, tags, nr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_unregister_buffers$MH() {
        return RuntimeHelper.requireNonNull(constants$3.io_uring_unregister_buffers$MH,"io_uring_unregister_buffers");
    }
    public static int io_uring_unregister_buffers ( Addressable ring) {
        var mh$ = io_uring_unregister_buffers$MH();
        try {
            return (int)mh$.invokeExact(ring);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_register_files$MH() {
        return RuntimeHelper.requireNonNull(constants$3.io_uring_register_files$MH,"io_uring_register_files");
    }
    public static int io_uring_register_files ( Addressable ring,  Addressable files,  int nr_files) {
        var mh$ = io_uring_register_files$MH();
        try {
            return (int)mh$.invokeExact(ring, files, nr_files);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_register_files_tags$MH() {
        return RuntimeHelper.requireNonNull(constants$3.io_uring_register_files_tags$MH,"io_uring_register_files_tags");
    }
    public static int io_uring_register_files_tags ( Addressable ring,  Addressable files,  Addressable tags,  int nr) {
        var mh$ = io_uring_register_files_tags$MH();
        try {
            return (int)mh$.invokeExact(ring, files, tags, nr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_register_files_sparse$MH() {
        return RuntimeHelper.requireNonNull(constants$3.io_uring_register_files_sparse$MH,"io_uring_register_files_sparse");
    }
    public static int io_uring_register_files_sparse ( Addressable ring,  int nr) {
        var mh$ = io_uring_register_files_sparse$MH();
        try {
            return (int)mh$.invokeExact(ring, nr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_register_files_update_tag$MH() {
        return RuntimeHelper.requireNonNull(constants$3.io_uring_register_files_update_tag$MH,"io_uring_register_files_update_tag");
    }
    public static int io_uring_register_files_update_tag ( Addressable ring,  int off,  Addressable files,  Addressable tags,  int nr_files) {
        var mh$ = io_uring_register_files_update_tag$MH();
        try {
            return (int)mh$.invokeExact(ring, off, files, tags, nr_files);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_unregister_files$MH() {
        return RuntimeHelper.requireNonNull(constants$4.io_uring_unregister_files$MH,"io_uring_unregister_files");
    }
    public static int io_uring_unregister_files ( Addressable ring) {
        var mh$ = io_uring_unregister_files$MH();
        try {
            return (int)mh$.invokeExact(ring);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_register_files_update$MH() {
        return RuntimeHelper.requireNonNull(constants$4.io_uring_register_files_update$MH,"io_uring_register_files_update");
    }
    public static int io_uring_register_files_update ( Addressable ring,  int off,  Addressable files,  int nr_files) {
        var mh$ = io_uring_register_files_update$MH();
        try {
            return (int)mh$.invokeExact(ring, off, files, nr_files);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_register_eventfd$MH() {
        return RuntimeHelper.requireNonNull(constants$4.io_uring_register_eventfd$MH,"io_uring_register_eventfd");
    }
    public static int io_uring_register_eventfd ( Addressable ring,  int fd) {
        var mh$ = io_uring_register_eventfd$MH();
        try {
            return (int)mh$.invokeExact(ring, fd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_register_eventfd_async$MH() {
        return RuntimeHelper.requireNonNull(constants$4.io_uring_register_eventfd_async$MH,"io_uring_register_eventfd_async");
    }
    public static int io_uring_register_eventfd_async ( Addressable ring,  int fd) {
        var mh$ = io_uring_register_eventfd_async$MH();
        try {
            return (int)mh$.invokeExact(ring, fd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_unregister_eventfd$MH() {
        return RuntimeHelper.requireNonNull(constants$4.io_uring_unregister_eventfd$MH,"io_uring_unregister_eventfd");
    }
    public static int io_uring_unregister_eventfd ( Addressable ring) {
        var mh$ = io_uring_unregister_eventfd$MH();
        try {
            return (int)mh$.invokeExact(ring);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_register_probe$MH() {
        return RuntimeHelper.requireNonNull(constants$4.io_uring_register_probe$MH,"io_uring_register_probe");
    }
    public static int io_uring_register_probe ( Addressable ring,  Addressable p,  int nr) {
        var mh$ = io_uring_register_probe$MH();
        try {
            return (int)mh$.invokeExact(ring, p, nr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_register_personality$MH() {
        return RuntimeHelper.requireNonNull(constants$5.io_uring_register_personality$MH,"io_uring_register_personality");
    }
    public static int io_uring_register_personality ( Addressable ring) {
        var mh$ = io_uring_register_personality$MH();
        try {
            return (int)mh$.invokeExact(ring);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_unregister_personality$MH() {
        return RuntimeHelper.requireNonNull(constants$5.io_uring_unregister_personality$MH,"io_uring_unregister_personality");
    }
    public static int io_uring_unregister_personality ( Addressable ring,  int id) {
        var mh$ = io_uring_unregister_personality$MH();
        try {
            return (int)mh$.invokeExact(ring, id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_register_restrictions$MH() {
        return RuntimeHelper.requireNonNull(constants$5.io_uring_register_restrictions$MH,"io_uring_register_restrictions");
    }
    public static int io_uring_register_restrictions ( Addressable ring,  Addressable res,  int nr_res) {
        var mh$ = io_uring_register_restrictions$MH();
        try {
            return (int)mh$.invokeExact(ring, res, nr_res);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_enable_rings$MH() {
        return RuntimeHelper.requireNonNull(constants$5.io_uring_enable_rings$MH,"io_uring_enable_rings");
    }
    public static int io_uring_enable_rings ( Addressable ring) {
        var mh$ = io_uring_enable_rings$MH();
        try {
            return (int)mh$.invokeExact(ring);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __io_uring_sqring_wait$MH() {
        return RuntimeHelper.requireNonNull(constants$5.__io_uring_sqring_wait$MH,"__io_uring_sqring_wait");
    }
    public static int __io_uring_sqring_wait ( Addressable ring) {
        var mh$ = __io_uring_sqring_wait$MH();
        try {
            return (int)mh$.invokeExact(ring);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_register_iowq_aff$MH() {
        return RuntimeHelper.requireNonNull(constants$5.io_uring_register_iowq_aff$MH,"io_uring_register_iowq_aff");
    }
    public static int io_uring_register_iowq_aff ( Addressable ring,  long cpusz,  Addressable mask) {
        var mh$ = io_uring_register_iowq_aff$MH();
        try {
            return (int)mh$.invokeExact(ring, cpusz, mask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_unregister_iowq_aff$MH() {
        return RuntimeHelper.requireNonNull(constants$6.io_uring_unregister_iowq_aff$MH,"io_uring_unregister_iowq_aff");
    }
    public static int io_uring_unregister_iowq_aff ( Addressable ring) {
        var mh$ = io_uring_unregister_iowq_aff$MH();
        try {
            return (int)mh$.invokeExact(ring);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_register_iowq_max_workers$MH() {
        return RuntimeHelper.requireNonNull(constants$6.io_uring_register_iowq_max_workers$MH,"io_uring_register_iowq_max_workers");
    }
    public static int io_uring_register_iowq_max_workers ( Addressable ring,  Addressable values) {
        var mh$ = io_uring_register_iowq_max_workers$MH();
        try {
            return (int)mh$.invokeExact(ring, values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_register_ring_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$6.io_uring_register_ring_fd$MH,"io_uring_register_ring_fd");
    }
    public static int io_uring_register_ring_fd ( Addressable ring) {
        var mh$ = io_uring_register_ring_fd$MH();
        try {
            return (int)mh$.invokeExact(ring);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_unregister_ring_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$6.io_uring_unregister_ring_fd$MH,"io_uring_unregister_ring_fd");
    }
    public static int io_uring_unregister_ring_fd ( Addressable ring) {
        var mh$ = io_uring_unregister_ring_fd$MH();
        try {
            return (int)mh$.invokeExact(ring);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_register_buf_ring$MH() {
        return RuntimeHelper.requireNonNull(constants$6.io_uring_register_buf_ring$MH,"io_uring_register_buf_ring");
    }
    public static int io_uring_register_buf_ring ( Addressable ring,  Addressable reg,  int flags) {
        var mh$ = io_uring_register_buf_ring$MH();
        try {
            return (int)mh$.invokeExact(ring, reg, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_unregister_buf_ring$MH() {
        return RuntimeHelper.requireNonNull(constants$6.io_uring_unregister_buf_ring$MH,"io_uring_unregister_buf_ring");
    }
    public static int io_uring_unregister_buf_ring ( Addressable ring,  int bgid) {
        var mh$ = io_uring_unregister_buf_ring$MH();
        try {
            return (int)mh$.invokeExact(ring, bgid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_register_sync_cancel$MH() {
        return RuntimeHelper.requireNonNull(constants$7.io_uring_register_sync_cancel$MH,"io_uring_register_sync_cancel");
    }
    public static int io_uring_register_sync_cancel ( Addressable ring,  Addressable reg) {
        var mh$ = io_uring_register_sync_cancel$MH();
        try {
            return (int)mh$.invokeExact(ring, reg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_register_file_alloc_range$MH() {
        return RuntimeHelper.requireNonNull(constants$7.io_uring_register_file_alloc_range$MH,"io_uring_register_file_alloc_range");
    }
    public static int io_uring_register_file_alloc_range ( Addressable ring,  int off,  int len) {
        var mh$ = io_uring_register_file_alloc_range$MH();
        try {
            return (int)mh$.invokeExact(ring, off, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_get_events$MH() {
        return RuntimeHelper.requireNonNull(constants$7.io_uring_get_events$MH,"io_uring_get_events");
    }
    public static int io_uring_get_events ( Addressable ring) {
        var mh$ = io_uring_get_events$MH();
        try {
            return (int)mh$.invokeExact(ring);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_submit_and_get_events$MH() {
        return RuntimeHelper.requireNonNull(constants$7.io_uring_submit_and_get_events$MH,"io_uring_submit_and_get_events");
    }
    public static int io_uring_submit_and_get_events ( Addressable ring) {
        var mh$ = io_uring_submit_and_get_events$MH();
        try {
            return (int)mh$.invokeExact(ring);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_enter$MH() {
        return RuntimeHelper.requireNonNull(constants$7.io_uring_enter$MH,"io_uring_enter");
    }
    public static int io_uring_enter ( int fd,  int to_submit,  int min_complete,  int flags,  Addressable sig) {
        var mh$ = io_uring_enter$MH();
        try {
            return (int)mh$.invokeExact(fd, to_submit, min_complete, flags, sig);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_enter2$MH() {
        return RuntimeHelper.requireNonNull(constants$7.io_uring_enter2$MH,"io_uring_enter2");
    }
    public static int io_uring_enter2 ( int fd,  int to_submit,  int min_complete,  int flags,  Addressable sig,  long sz) {
        var mh$ = io_uring_enter2$MH();
        try {
            return (int)mh$.invokeExact(fd, to_submit, min_complete, flags, sig, sz);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_setup$MH() {
        return RuntimeHelper.requireNonNull(constants$8.io_uring_setup$MH,"io_uring_setup");
    }
    public static int io_uring_setup ( int entries,  Addressable p) {
        var mh$ = io_uring_setup$MH();
        try {
            return (int)mh$.invokeExact(entries, p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_register$MH() {
        return RuntimeHelper.requireNonNull(constants$8.io_uring_register$MH,"io_uring_register");
    }
    public static int io_uring_register ( int fd,  int opcode,  Addressable arg,  int nr_args) {
        var mh$ = io_uring_register$MH();
        try {
            return (int)mh$.invokeExact(fd, opcode, arg, nr_args);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __io_uring_get_cqe$MH() {
        return RuntimeHelper.requireNonNull(constants$8.__io_uring_get_cqe$MH,"__io_uring_get_cqe");
    }
    public static int __io_uring_get_cqe ( Addressable ring,  Addressable cqe_ptr,  int submit,  int wait_nr,  Addressable sigmask) {
        var mh$ = __io_uring_get_cqe$MH();
        try {
            return (int)mh$.invokeExact(ring, cqe_ptr, submit, wait_nr, sigmask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_cq_advance$MH() {
        return RuntimeHelper.requireNonNull(constants$8.io_uring_cq_advance$MH,"io_uring_cq_advance");
    }
    public static void io_uring_cq_advance ( Addressable ring,  int nr) {
        var mh$ = io_uring_cq_advance$MH();
        try {
            mh$.invokeExact(ring, nr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_cqe_seen$MH() {
        return RuntimeHelper.requireNonNull(constants$8.io_uring_cqe_seen$MH,"io_uring_cqe_seen");
    }
    public static void io_uring_cqe_seen ( Addressable ring,  Addressable cqe) {
        var mh$ = io_uring_cqe_seen$MH();
        try {
            mh$.invokeExact(ring, cqe);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_sqe_set_data$MH() {
        return RuntimeHelper.requireNonNull(constants$8.io_uring_sqe_set_data$MH,"io_uring_sqe_set_data");
    }
    public static void io_uring_sqe_set_data ( Addressable sqe,  Addressable data) {
        var mh$ = io_uring_sqe_set_data$MH();
        try {
            mh$.invokeExact(sqe, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_cqe_get_data$MH() {
        return RuntimeHelper.requireNonNull(constants$9.io_uring_cqe_get_data$MH,"io_uring_cqe_get_data");
    }
    public static MemoryAddress io_uring_cqe_get_data ( Addressable cqe) {
        var mh$ = io_uring_cqe_get_data$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(cqe);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_sqe_set_data64$MH() {
        return RuntimeHelper.requireNonNull(constants$9.io_uring_sqe_set_data64$MH,"io_uring_sqe_set_data64");
    }
    public static void io_uring_sqe_set_data64 ( Addressable sqe,  long data) {
        var mh$ = io_uring_sqe_set_data64$MH();
        try {
            mh$.invokeExact(sqe, data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_cqe_get_data64$MH() {
        return RuntimeHelper.requireNonNull(constants$9.io_uring_cqe_get_data64$MH,"io_uring_cqe_get_data64");
    }
    public static long io_uring_cqe_get_data64 ( Addressable cqe) {
        var mh$ = io_uring_cqe_get_data64$MH();
        try {
            return (long)mh$.invokeExact(cqe);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_sqe_set_flags$MH() {
        return RuntimeHelper.requireNonNull(constants$9.io_uring_sqe_set_flags$MH,"io_uring_sqe_set_flags");
    }
    public static void io_uring_sqe_set_flags ( Addressable sqe,  int flags) {
        var mh$ = io_uring_sqe_set_flags$MH();
        try {
            mh$.invokeExact(sqe, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __io_uring_set_target_fixed_file$MH() {
        return RuntimeHelper.requireNonNull(constants$9.__io_uring_set_target_fixed_file$MH,"__io_uring_set_target_fixed_file");
    }
    public static void __io_uring_set_target_fixed_file ( Addressable sqe,  int file_index) {
        var mh$ = __io_uring_set_target_fixed_file$MH();
        try {
            mh$.invokeExact(sqe, file_index);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_rw$MH() {
        return RuntimeHelper.requireNonNull(constants$9.io_uring_prep_rw$MH,"io_uring_prep_rw");
    }
    public static void io_uring_prep_rw ( int op,  Addressable sqe,  int fd,  Addressable addr,  int len,  long offset) {
        var mh$ = io_uring_prep_rw$MH();
        try {
            mh$.invokeExact(op, sqe, fd, addr, len, offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_splice$MH() {
        return RuntimeHelper.requireNonNull(constants$10.io_uring_prep_splice$MH,"io_uring_prep_splice");
    }
    public static void io_uring_prep_splice ( Addressable sqe,  int fd_in,  long off_in,  int fd_out,  long off_out,  int nbytes,  int splice_flags) {
        var mh$ = io_uring_prep_splice$MH();
        try {
            mh$.invokeExact(sqe, fd_in, off_in, fd_out, off_out, nbytes, splice_flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_tee$MH() {
        return RuntimeHelper.requireNonNull(constants$10.io_uring_prep_tee$MH,"io_uring_prep_tee");
    }
    public static void io_uring_prep_tee ( Addressable sqe,  int fd_in,  int fd_out,  int nbytes,  int splice_flags) {
        var mh$ = io_uring_prep_tee$MH();
        try {
            mh$.invokeExact(sqe, fd_in, fd_out, nbytes, splice_flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_readv$MH() {
        return RuntimeHelper.requireNonNull(constants$10.io_uring_prep_readv$MH,"io_uring_prep_readv");
    }
    public static void io_uring_prep_readv ( Addressable sqe,  int fd,  Addressable iovecs,  int nr_vecs,  long offset) {
        var mh$ = io_uring_prep_readv$MH();
        try {
            mh$.invokeExact(sqe, fd, iovecs, nr_vecs, offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_readv2$MH() {
        return RuntimeHelper.requireNonNull(constants$10.io_uring_prep_readv2$MH,"io_uring_prep_readv2");
    }
    public static void io_uring_prep_readv2 ( Addressable sqe,  int fd,  Addressable iovecs,  int nr_vecs,  long offset,  int flags) {
        var mh$ = io_uring_prep_readv2$MH();
        try {
            mh$.invokeExact(sqe, fd, iovecs, nr_vecs, offset, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_read_fixed$MH() {
        return RuntimeHelper.requireNonNull(constants$10.io_uring_prep_read_fixed$MH,"io_uring_prep_read_fixed");
    }
    public static void io_uring_prep_read_fixed ( Addressable sqe,  int fd,  Addressable buf,  int nbytes,  long offset,  int buf_index) {
        var mh$ = io_uring_prep_read_fixed$MH();
        try {
            mh$.invokeExact(sqe, fd, buf, nbytes, offset, buf_index);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_writev$MH() {
        return RuntimeHelper.requireNonNull(constants$10.io_uring_prep_writev$MH,"io_uring_prep_writev");
    }
    public static void io_uring_prep_writev ( Addressable sqe,  int fd,  Addressable iovecs,  int nr_vecs,  long offset) {
        var mh$ = io_uring_prep_writev$MH();
        try {
            mh$.invokeExact(sqe, fd, iovecs, nr_vecs, offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_writev2$MH() {
        return RuntimeHelper.requireNonNull(constants$11.io_uring_prep_writev2$MH,"io_uring_prep_writev2");
    }
    public static void io_uring_prep_writev2 ( Addressable sqe,  int fd,  Addressable iovecs,  int nr_vecs,  long offset,  int flags) {
        var mh$ = io_uring_prep_writev2$MH();
        try {
            mh$.invokeExact(sqe, fd, iovecs, nr_vecs, offset, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_write_fixed$MH() {
        return RuntimeHelper.requireNonNull(constants$11.io_uring_prep_write_fixed$MH,"io_uring_prep_write_fixed");
    }
    public static void io_uring_prep_write_fixed ( Addressable sqe,  int fd,  Addressable buf,  int nbytes,  long offset,  int buf_index) {
        var mh$ = io_uring_prep_write_fixed$MH();
        try {
            mh$.invokeExact(sqe, fd, buf, nbytes, offset, buf_index);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_recvmsg$MH() {
        return RuntimeHelper.requireNonNull(constants$11.io_uring_prep_recvmsg$MH,"io_uring_prep_recvmsg");
    }
    public static void io_uring_prep_recvmsg ( Addressable sqe,  int fd,  Addressable msg,  int flags) {
        var mh$ = io_uring_prep_recvmsg$MH();
        try {
            mh$.invokeExact(sqe, fd, msg, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_recvmsg_multishot$MH() {
        return RuntimeHelper.requireNonNull(constants$11.io_uring_prep_recvmsg_multishot$MH,"io_uring_prep_recvmsg_multishot");
    }
    public static void io_uring_prep_recvmsg_multishot ( Addressable sqe,  int fd,  Addressable msg,  int flags) {
        var mh$ = io_uring_prep_recvmsg_multishot$MH();
        try {
            mh$.invokeExact(sqe, fd, msg, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_sendmsg$MH() {
        return RuntimeHelper.requireNonNull(constants$11.io_uring_prep_sendmsg$MH,"io_uring_prep_sendmsg");
    }
    public static void io_uring_prep_sendmsg ( Addressable sqe,  int fd,  Addressable msg,  int flags) {
        var mh$ = io_uring_prep_sendmsg$MH();
        try {
            mh$.invokeExact(sqe, fd, msg, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __io_uring_prep_poll_mask$MH() {
        return RuntimeHelper.requireNonNull(constants$11.__io_uring_prep_poll_mask$MH,"__io_uring_prep_poll_mask");
    }
    public static int __io_uring_prep_poll_mask ( int poll_mask) {
        var mh$ = __io_uring_prep_poll_mask$MH();
        try {
            return (int)mh$.invokeExact(poll_mask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_poll_add$MH() {
        return RuntimeHelper.requireNonNull(constants$12.io_uring_prep_poll_add$MH,"io_uring_prep_poll_add");
    }
    public static void io_uring_prep_poll_add ( Addressable sqe,  int fd,  int poll_mask) {
        var mh$ = io_uring_prep_poll_add$MH();
        try {
            mh$.invokeExact(sqe, fd, poll_mask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_poll_multishot$MH() {
        return RuntimeHelper.requireNonNull(constants$12.io_uring_prep_poll_multishot$MH,"io_uring_prep_poll_multishot");
    }
    public static void io_uring_prep_poll_multishot ( Addressable sqe,  int fd,  int poll_mask) {
        var mh$ = io_uring_prep_poll_multishot$MH();
        try {
            mh$.invokeExact(sqe, fd, poll_mask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_poll_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$12.io_uring_prep_poll_remove$MH,"io_uring_prep_poll_remove");
    }
    public static void io_uring_prep_poll_remove ( Addressable sqe,  long user_data) {
        var mh$ = io_uring_prep_poll_remove$MH();
        try {
            mh$.invokeExact(sqe, user_data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_poll_update$MH() {
        return RuntimeHelper.requireNonNull(constants$12.io_uring_prep_poll_update$MH,"io_uring_prep_poll_update");
    }
    public static void io_uring_prep_poll_update ( Addressable sqe,  long old_user_data,  long new_user_data,  int poll_mask,  int flags) {
        var mh$ = io_uring_prep_poll_update$MH();
        try {
            mh$.invokeExact(sqe, old_user_data, new_user_data, poll_mask, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_fsync$MH() {
        return RuntimeHelper.requireNonNull(constants$12.io_uring_prep_fsync$MH,"io_uring_prep_fsync");
    }
    public static void io_uring_prep_fsync ( Addressable sqe,  int fd,  int fsync_flags) {
        var mh$ = io_uring_prep_fsync$MH();
        try {
            mh$.invokeExact(sqe, fd, fsync_flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_nop$MH() {
        return RuntimeHelper.requireNonNull(constants$12.io_uring_prep_nop$MH,"io_uring_prep_nop");
    }
    public static void io_uring_prep_nop ( Addressable sqe) {
        var mh$ = io_uring_prep_nop$MH();
        try {
            mh$.invokeExact(sqe);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_timeout$MH() {
        return RuntimeHelper.requireNonNull(constants$13.io_uring_prep_timeout$MH,"io_uring_prep_timeout");
    }
    public static void io_uring_prep_timeout ( Addressable sqe,  Addressable ts,  int count,  int flags) {
        var mh$ = io_uring_prep_timeout$MH();
        try {
            mh$.invokeExact(sqe, ts, count, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_timeout_remove$MH() {
        return RuntimeHelper.requireNonNull(constants$13.io_uring_prep_timeout_remove$MH,"io_uring_prep_timeout_remove");
    }
    public static void io_uring_prep_timeout_remove ( Addressable sqe,  long user_data,  int flags) {
        var mh$ = io_uring_prep_timeout_remove$MH();
        try {
            mh$.invokeExact(sqe, user_data, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_timeout_update$MH() {
        return RuntimeHelper.requireNonNull(constants$13.io_uring_prep_timeout_update$MH,"io_uring_prep_timeout_update");
    }
    public static void io_uring_prep_timeout_update ( Addressable sqe,  Addressable ts,  long user_data,  int flags) {
        var mh$ = io_uring_prep_timeout_update$MH();
        try {
            mh$.invokeExact(sqe, ts, user_data, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_accept$MH() {
        return RuntimeHelper.requireNonNull(constants$13.io_uring_prep_accept$MH,"io_uring_prep_accept");
    }
    public static void io_uring_prep_accept ( Addressable sqe,  int fd,  Addressable addr,  Addressable addrlen,  int flags) {
        var mh$ = io_uring_prep_accept$MH();
        try {
            mh$.invokeExact(sqe, fd, addr, addrlen, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_accept_direct$MH() {
        return RuntimeHelper.requireNonNull(constants$13.io_uring_prep_accept_direct$MH,"io_uring_prep_accept_direct");
    }
    public static void io_uring_prep_accept_direct ( Addressable sqe,  int fd,  Addressable addr,  Addressable addrlen,  int flags,  int file_index) {
        var mh$ = io_uring_prep_accept_direct$MH();
        try {
            mh$.invokeExact(sqe, fd, addr, addrlen, flags, file_index);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_multishot_accept$MH() {
        return RuntimeHelper.requireNonNull(constants$13.io_uring_prep_multishot_accept$MH,"io_uring_prep_multishot_accept");
    }
    public static void io_uring_prep_multishot_accept ( Addressable sqe,  int fd,  Addressable addr,  Addressable addrlen,  int flags) {
        var mh$ = io_uring_prep_multishot_accept$MH();
        try {
            mh$.invokeExact(sqe, fd, addr, addrlen, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_multishot_accept_direct$MH() {
        return RuntimeHelper.requireNonNull(constants$14.io_uring_prep_multishot_accept_direct$MH,"io_uring_prep_multishot_accept_direct");
    }
    public static void io_uring_prep_multishot_accept_direct ( Addressable sqe,  int fd,  Addressable addr,  Addressable addrlen,  int flags) {
        var mh$ = io_uring_prep_multishot_accept_direct$MH();
        try {
            mh$.invokeExact(sqe, fd, addr, addrlen, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_cancel64$MH() {
        return RuntimeHelper.requireNonNull(constants$14.io_uring_prep_cancel64$MH,"io_uring_prep_cancel64");
    }
    public static void io_uring_prep_cancel64 ( Addressable sqe,  long user_data,  int flags) {
        var mh$ = io_uring_prep_cancel64$MH();
        try {
            mh$.invokeExact(sqe, user_data, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_cancel$MH() {
        return RuntimeHelper.requireNonNull(constants$14.io_uring_prep_cancel$MH,"io_uring_prep_cancel");
    }
    public static void io_uring_prep_cancel ( Addressable sqe,  Addressable user_data,  int flags) {
        var mh$ = io_uring_prep_cancel$MH();
        try {
            mh$.invokeExact(sqe, user_data, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_cancel_fd$MH() {
        return RuntimeHelper.requireNonNull(constants$14.io_uring_prep_cancel_fd$MH,"io_uring_prep_cancel_fd");
    }
    public static void io_uring_prep_cancel_fd ( Addressable sqe,  int fd,  int flags) {
        var mh$ = io_uring_prep_cancel_fd$MH();
        try {
            mh$.invokeExact(sqe, fd, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_link_timeout$MH() {
        return RuntimeHelper.requireNonNull(constants$14.io_uring_prep_link_timeout$MH,"io_uring_prep_link_timeout");
    }
    public static void io_uring_prep_link_timeout ( Addressable sqe,  Addressable ts,  int flags) {
        var mh$ = io_uring_prep_link_timeout$MH();
        try {
            mh$.invokeExact(sqe, ts, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_connect$MH() {
        return RuntimeHelper.requireNonNull(constants$14.io_uring_prep_connect$MH,"io_uring_prep_connect");
    }
    public static void io_uring_prep_connect ( Addressable sqe,  int fd,  Addressable addr,  int addrlen) {
        var mh$ = io_uring_prep_connect$MH();
        try {
            mh$.invokeExact(sqe, fd, addr, addrlen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_files_update$MH() {
        return RuntimeHelper.requireNonNull(constants$15.io_uring_prep_files_update$MH,"io_uring_prep_files_update");
    }
    public static void io_uring_prep_files_update ( Addressable sqe,  Addressable fds,  int nr_fds,  int offset) {
        var mh$ = io_uring_prep_files_update$MH();
        try {
            mh$.invokeExact(sqe, fds, nr_fds, offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_fallocate$MH() {
        return RuntimeHelper.requireNonNull(constants$15.io_uring_prep_fallocate$MH,"io_uring_prep_fallocate");
    }
    public static void io_uring_prep_fallocate ( Addressable sqe,  int fd,  int mode,  long offset,  long len) {
        var mh$ = io_uring_prep_fallocate$MH();
        try {
            mh$.invokeExact(sqe, fd, mode, offset, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_openat$MH() {
        return RuntimeHelper.requireNonNull(constants$15.io_uring_prep_openat$MH,"io_uring_prep_openat");
    }
    public static void io_uring_prep_openat ( Addressable sqe,  int dfd,  Addressable path,  int flags,  int mode) {
        var mh$ = io_uring_prep_openat$MH();
        try {
            mh$.invokeExact(sqe, dfd, path, flags, mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_openat_direct$MH() {
        return RuntimeHelper.requireNonNull(constants$15.io_uring_prep_openat_direct$MH,"io_uring_prep_openat_direct");
    }
    public static void io_uring_prep_openat_direct ( Addressable sqe,  int dfd,  Addressable path,  int flags,  int mode,  int file_index) {
        var mh$ = io_uring_prep_openat_direct$MH();
        try {
            mh$.invokeExact(sqe, dfd, path, flags, mode, file_index);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_close$MH() {
        return RuntimeHelper.requireNonNull(constants$15.io_uring_prep_close$MH,"io_uring_prep_close");
    }
    public static void io_uring_prep_close ( Addressable sqe,  int fd) {
        var mh$ = io_uring_prep_close$MH();
        try {
            mh$.invokeExact(sqe, fd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_close_direct$MH() {
        return RuntimeHelper.requireNonNull(constants$15.io_uring_prep_close_direct$MH,"io_uring_prep_close_direct");
    }
    public static void io_uring_prep_close_direct ( Addressable sqe,  int file_index) {
        var mh$ = io_uring_prep_close_direct$MH();
        try {
            mh$.invokeExact(sqe, file_index);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_read$MH() {
        return RuntimeHelper.requireNonNull(constants$16.io_uring_prep_read$MH,"io_uring_prep_read");
    }
    public static void io_uring_prep_read ( Addressable sqe,  int fd,  Addressable buf,  int nbytes,  long offset) {
        var mh$ = io_uring_prep_read$MH();
        try {
            mh$.invokeExact(sqe, fd, buf, nbytes, offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_write$MH() {
        return RuntimeHelper.requireNonNull(constants$16.io_uring_prep_write$MH,"io_uring_prep_write");
    }
    public static void io_uring_prep_write ( Addressable sqe,  int fd,  Addressable buf,  int nbytes,  long offset) {
        var mh$ = io_uring_prep_write$MH();
        try {
            mh$.invokeExact(sqe, fd, buf, nbytes, offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_statx$MH() {
        return RuntimeHelper.requireNonNull(constants$16.io_uring_prep_statx$MH,"io_uring_prep_statx");
    }
    public static void io_uring_prep_statx ( Addressable sqe,  int dfd,  Addressable path,  int flags,  int mask,  Addressable statxbuf) {
        var mh$ = io_uring_prep_statx$MH();
        try {
            mh$.invokeExact(sqe, dfd, path, flags, mask, statxbuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_fadvise$MH() {
        return RuntimeHelper.requireNonNull(constants$16.io_uring_prep_fadvise$MH,"io_uring_prep_fadvise");
    }
    public static void io_uring_prep_fadvise ( Addressable sqe,  int fd,  long offset,  long len,  int advice) {
        var mh$ = io_uring_prep_fadvise$MH();
        try {
            mh$.invokeExact(sqe, fd, offset, len, advice);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_madvise$MH() {
        return RuntimeHelper.requireNonNull(constants$16.io_uring_prep_madvise$MH,"io_uring_prep_madvise");
    }
    public static void io_uring_prep_madvise ( Addressable sqe,  Addressable addr,  long length,  int advice) {
        var mh$ = io_uring_prep_madvise$MH();
        try {
            mh$.invokeExact(sqe, addr, length, advice);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_send$MH() {
        return RuntimeHelper.requireNonNull(constants$16.io_uring_prep_send$MH,"io_uring_prep_send");
    }
    public static void io_uring_prep_send ( Addressable sqe,  int sockfd,  Addressable buf,  long len,  int flags) {
        var mh$ = io_uring_prep_send$MH();
        try {
            mh$.invokeExact(sqe, sockfd, buf, len, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_send_zc$MH() {
        return RuntimeHelper.requireNonNull(constants$17.io_uring_prep_send_zc$MH,"io_uring_prep_send_zc");
    }
    public static void io_uring_prep_send_zc ( Addressable sqe,  int sockfd,  Addressable buf,  long len,  int flags,  int zc_flags) {
        var mh$ = io_uring_prep_send_zc$MH();
        try {
            mh$.invokeExact(sqe, sockfd, buf, len, flags, zc_flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_send_set_addr$MH() {
        return RuntimeHelper.requireNonNull(constants$17.io_uring_prep_send_set_addr$MH,"io_uring_prep_send_set_addr");
    }
    public static void io_uring_prep_send_set_addr ( Addressable sqe,  Addressable dest_addr,  short addr_len) {
        var mh$ = io_uring_prep_send_set_addr$MH();
        try {
            mh$.invokeExact(sqe, dest_addr, addr_len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_recv$MH() {
        return RuntimeHelper.requireNonNull(constants$17.io_uring_prep_recv$MH,"io_uring_prep_recv");
    }
    public static void io_uring_prep_recv ( Addressable sqe,  int sockfd,  Addressable buf,  long len,  int flags) {
        var mh$ = io_uring_prep_recv$MH();
        try {
            mh$.invokeExact(sqe, sockfd, buf, len, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_recv_multishot$MH() {
        return RuntimeHelper.requireNonNull(constants$17.io_uring_prep_recv_multishot$MH,"io_uring_prep_recv_multishot");
    }
    public static void io_uring_prep_recv_multishot ( Addressable sqe,  int sockfd,  Addressable buf,  long len,  int flags) {
        var mh$ = io_uring_prep_recv_multishot$MH();
        try {
            mh$.invokeExact(sqe, sockfd, buf, len, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_recvmsg_validate$MH() {
        return RuntimeHelper.requireNonNull(constants$17.io_uring_recvmsg_validate$MH,"io_uring_recvmsg_validate");
    }
    public static MemoryAddress io_uring_recvmsg_validate ( Addressable buf,  int buf_len,  Addressable msgh) {
        var mh$ = io_uring_recvmsg_validate$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(buf, buf_len, msgh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_recvmsg_name$MH() {
        return RuntimeHelper.requireNonNull(constants$17.io_uring_recvmsg_name$MH,"io_uring_recvmsg_name");
    }
    public static MemoryAddress io_uring_recvmsg_name ( Addressable o) {
        var mh$ = io_uring_recvmsg_name$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(o);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_recvmsg_cmsg_firsthdr$MH() {
        return RuntimeHelper.requireNonNull(constants$18.io_uring_recvmsg_cmsg_firsthdr$MH,"io_uring_recvmsg_cmsg_firsthdr");
    }
    public static MemoryAddress io_uring_recvmsg_cmsg_firsthdr ( Addressable o,  Addressable msgh) {
        var mh$ = io_uring_recvmsg_cmsg_firsthdr$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(o, msgh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_recvmsg_cmsg_nexthdr$MH() {
        return RuntimeHelper.requireNonNull(constants$18.io_uring_recvmsg_cmsg_nexthdr$MH,"io_uring_recvmsg_cmsg_nexthdr");
    }
    public static MemoryAddress io_uring_recvmsg_cmsg_nexthdr ( Addressable o,  Addressable msgh,  Addressable cmsg) {
        var mh$ = io_uring_recvmsg_cmsg_nexthdr$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(o, msgh, cmsg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_recvmsg_payload$MH() {
        return RuntimeHelper.requireNonNull(constants$18.io_uring_recvmsg_payload$MH,"io_uring_recvmsg_payload");
    }
    public static MemoryAddress io_uring_recvmsg_payload ( Addressable o,  Addressable msgh) {
        var mh$ = io_uring_recvmsg_payload$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(o, msgh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_recvmsg_payload_length$MH() {
        return RuntimeHelper.requireNonNull(constants$18.io_uring_recvmsg_payload_length$MH,"io_uring_recvmsg_payload_length");
    }
    public static int io_uring_recvmsg_payload_length ( Addressable o,  int buf_len,  Addressable msgh) {
        var mh$ = io_uring_recvmsg_payload_length$MH();
        try {
            return (int)mh$.invokeExact(o, buf_len, msgh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_openat2$MH() {
        return RuntimeHelper.requireNonNull(constants$18.io_uring_prep_openat2$MH,"io_uring_prep_openat2");
    }
    public static void io_uring_prep_openat2 ( Addressable sqe,  int dfd,  Addressable path,  Addressable how) {
        var mh$ = io_uring_prep_openat2$MH();
        try {
            mh$.invokeExact(sqe, dfd, path, how);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_openat2_direct$MH() {
        return RuntimeHelper.requireNonNull(constants$18.io_uring_prep_openat2_direct$MH,"io_uring_prep_openat2_direct");
    }
    public static void io_uring_prep_openat2_direct ( Addressable sqe,  int dfd,  Addressable path,  Addressable how,  int file_index) {
        var mh$ = io_uring_prep_openat2_direct$MH();
        try {
            mh$.invokeExact(sqe, dfd, path, how, file_index);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_epoll_ctl$MH() {
        return RuntimeHelper.requireNonNull(constants$19.io_uring_prep_epoll_ctl$MH,"io_uring_prep_epoll_ctl");
    }
    public static void io_uring_prep_epoll_ctl ( Addressable sqe,  int epfd,  int fd,  int op,  Addressable ev) {
        var mh$ = io_uring_prep_epoll_ctl$MH();
        try {
            mh$.invokeExact(sqe, epfd, fd, op, ev);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_provide_buffers$MH() {
        return RuntimeHelper.requireNonNull(constants$19.io_uring_prep_provide_buffers$MH,"io_uring_prep_provide_buffers");
    }
    public static void io_uring_prep_provide_buffers ( Addressable sqe,  Addressable addr,  int len,  int nr,  int bgid,  int bid) {
        var mh$ = io_uring_prep_provide_buffers$MH();
        try {
            mh$.invokeExact(sqe, addr, len, nr, bgid, bid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_remove_buffers$MH() {
        return RuntimeHelper.requireNonNull(constants$19.io_uring_prep_remove_buffers$MH,"io_uring_prep_remove_buffers");
    }
    public static void io_uring_prep_remove_buffers ( Addressable sqe,  int nr,  int bgid) {
        var mh$ = io_uring_prep_remove_buffers$MH();
        try {
            mh$.invokeExact(sqe, nr, bgid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_shutdown$MH() {
        return RuntimeHelper.requireNonNull(constants$19.io_uring_prep_shutdown$MH,"io_uring_prep_shutdown");
    }
    public static void io_uring_prep_shutdown ( Addressable sqe,  int fd,  int how) {
        var mh$ = io_uring_prep_shutdown$MH();
        try {
            mh$.invokeExact(sqe, fd, how);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_unlinkat$MH() {
        return RuntimeHelper.requireNonNull(constants$19.io_uring_prep_unlinkat$MH,"io_uring_prep_unlinkat");
    }
    public static void io_uring_prep_unlinkat ( Addressable sqe,  int dfd,  Addressable path,  int flags) {
        var mh$ = io_uring_prep_unlinkat$MH();
        try {
            mh$.invokeExact(sqe, dfd, path, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_unlink$MH() {
        return RuntimeHelper.requireNonNull(constants$19.io_uring_prep_unlink$MH,"io_uring_prep_unlink");
    }
    public static void io_uring_prep_unlink ( Addressable sqe,  Addressable path,  int flags) {
        var mh$ = io_uring_prep_unlink$MH();
        try {
            mh$.invokeExact(sqe, path, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_renameat$MH() {
        return RuntimeHelper.requireNonNull(constants$20.io_uring_prep_renameat$MH,"io_uring_prep_renameat");
    }
    public static void io_uring_prep_renameat ( Addressable sqe,  int olddfd,  Addressable oldpath,  int newdfd,  Addressable newpath,  int flags) {
        var mh$ = io_uring_prep_renameat$MH();
        try {
            mh$.invokeExact(sqe, olddfd, oldpath, newdfd, newpath, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_rename$MH() {
        return RuntimeHelper.requireNonNull(constants$20.io_uring_prep_rename$MH,"io_uring_prep_rename");
    }
    public static void io_uring_prep_rename ( Addressable sqe,  Addressable oldpath,  Addressable newpath) {
        var mh$ = io_uring_prep_rename$MH();
        try {
            mh$.invokeExact(sqe, oldpath, newpath);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_sync_file_range$MH() {
        return RuntimeHelper.requireNonNull(constants$20.io_uring_prep_sync_file_range$MH,"io_uring_prep_sync_file_range");
    }
    public static void io_uring_prep_sync_file_range ( Addressable sqe,  int fd,  int len,  long offset,  int flags) {
        var mh$ = io_uring_prep_sync_file_range$MH();
        try {
            mh$.invokeExact(sqe, fd, len, offset, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_mkdirat$MH() {
        return RuntimeHelper.requireNonNull(constants$20.io_uring_prep_mkdirat$MH,"io_uring_prep_mkdirat");
    }
    public static void io_uring_prep_mkdirat ( Addressable sqe,  int dfd,  Addressable path,  int mode) {
        var mh$ = io_uring_prep_mkdirat$MH();
        try {
            mh$.invokeExact(sqe, dfd, path, mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_mkdir$MH() {
        return RuntimeHelper.requireNonNull(constants$20.io_uring_prep_mkdir$MH,"io_uring_prep_mkdir");
    }
    public static void io_uring_prep_mkdir ( Addressable sqe,  Addressable path,  int mode) {
        var mh$ = io_uring_prep_mkdir$MH();
        try {
            mh$.invokeExact(sqe, path, mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_symlinkat$MH() {
        return RuntimeHelper.requireNonNull(constants$20.io_uring_prep_symlinkat$MH,"io_uring_prep_symlinkat");
    }
    public static void io_uring_prep_symlinkat ( Addressable sqe,  Addressable target,  int newdirfd,  Addressable linkpath) {
        var mh$ = io_uring_prep_symlinkat$MH();
        try {
            mh$.invokeExact(sqe, target, newdirfd, linkpath);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_symlink$MH() {
        return RuntimeHelper.requireNonNull(constants$21.io_uring_prep_symlink$MH,"io_uring_prep_symlink");
    }
    public static void io_uring_prep_symlink ( Addressable sqe,  Addressable target,  Addressable linkpath) {
        var mh$ = io_uring_prep_symlink$MH();
        try {
            mh$.invokeExact(sqe, target, linkpath);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_linkat$MH() {
        return RuntimeHelper.requireNonNull(constants$21.io_uring_prep_linkat$MH,"io_uring_prep_linkat");
    }
    public static void io_uring_prep_linkat ( Addressable sqe,  int olddfd,  Addressable oldpath,  int newdfd,  Addressable newpath,  int flags) {
        var mh$ = io_uring_prep_linkat$MH();
        try {
            mh$.invokeExact(sqe, olddfd, oldpath, newdfd, newpath, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_link$MH() {
        return RuntimeHelper.requireNonNull(constants$21.io_uring_prep_link$MH,"io_uring_prep_link");
    }
    public static void io_uring_prep_link ( Addressable sqe,  Addressable oldpath,  Addressable newpath,  int flags) {
        var mh$ = io_uring_prep_link$MH();
        try {
            mh$.invokeExact(sqe, oldpath, newpath, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_msg_ring$MH() {
        return RuntimeHelper.requireNonNull(constants$21.io_uring_prep_msg_ring$MH,"io_uring_prep_msg_ring");
    }
    public static void io_uring_prep_msg_ring ( Addressable sqe,  int fd,  int len,  long data,  int flags) {
        var mh$ = io_uring_prep_msg_ring$MH();
        try {
            mh$.invokeExact(sqe, fd, len, data, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_getxattr$MH() {
        return RuntimeHelper.requireNonNull(constants$21.io_uring_prep_getxattr$MH,"io_uring_prep_getxattr");
    }
    public static void io_uring_prep_getxattr ( Addressable sqe,  Addressable name,  Addressable value,  Addressable path,  long len) {
        var mh$ = io_uring_prep_getxattr$MH();
        try {
            mh$.invokeExact(sqe, name, value, path, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_setxattr$MH() {
        return RuntimeHelper.requireNonNull(constants$21.io_uring_prep_setxattr$MH,"io_uring_prep_setxattr");
    }
    public static void io_uring_prep_setxattr ( Addressable sqe,  Addressable name,  Addressable value,  Addressable path,  int flags,  long len) {
        var mh$ = io_uring_prep_setxattr$MH();
        try {
            mh$.invokeExact(sqe, name, value, path, flags, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_fgetxattr$MH() {
        return RuntimeHelper.requireNonNull(constants$22.io_uring_prep_fgetxattr$MH,"io_uring_prep_fgetxattr");
    }
    public static void io_uring_prep_fgetxattr ( Addressable sqe,  int fd,  Addressable name,  Addressable value,  long len) {
        var mh$ = io_uring_prep_fgetxattr$MH();
        try {
            mh$.invokeExact(sqe, fd, name, value, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_fsetxattr$MH() {
        return RuntimeHelper.requireNonNull(constants$22.io_uring_prep_fsetxattr$MH,"io_uring_prep_fsetxattr");
    }
    public static void io_uring_prep_fsetxattr ( Addressable sqe,  int fd,  Addressable name,  Addressable value,  int flags,  long len) {
        var mh$ = io_uring_prep_fsetxattr$MH();
        try {
            mh$.invokeExact(sqe, fd, name, value, flags, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_socket$MH() {
        return RuntimeHelper.requireNonNull(constants$22.io_uring_prep_socket$MH,"io_uring_prep_socket");
    }
    public static void io_uring_prep_socket ( Addressable sqe,  int domain,  int type,  int protocol,  int flags) {
        var mh$ = io_uring_prep_socket$MH();
        try {
            mh$.invokeExact(sqe, domain, type, protocol, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_socket_direct$MH() {
        return RuntimeHelper.requireNonNull(constants$22.io_uring_prep_socket_direct$MH,"io_uring_prep_socket_direct");
    }
    public static void io_uring_prep_socket_direct ( Addressable sqe,  int domain,  int type,  int protocol,  int file_index,  int flags) {
        var mh$ = io_uring_prep_socket_direct$MH();
        try {
            mh$.invokeExact(sqe, domain, type, protocol, file_index, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_prep_socket_direct_alloc$MH() {
        return RuntimeHelper.requireNonNull(constants$22.io_uring_prep_socket_direct_alloc$MH,"io_uring_prep_socket_direct_alloc");
    }
    public static void io_uring_prep_socket_direct_alloc ( Addressable sqe,  int domain,  int type,  int protocol,  int flags) {
        var mh$ = io_uring_prep_socket_direct_alloc$MH();
        try {
            mh$.invokeExact(sqe, domain, type, protocol, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_sq_ready$MH() {
        return RuntimeHelper.requireNonNull(constants$22.io_uring_sq_ready$MH,"io_uring_sq_ready");
    }
    public static int io_uring_sq_ready ( Addressable ring) {
        var mh$ = io_uring_sq_ready$MH();
        try {
            return (int)mh$.invokeExact(ring);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_sq_space_left$MH() {
        return RuntimeHelper.requireNonNull(constants$23.io_uring_sq_space_left$MH,"io_uring_sq_space_left");
    }
    public static int io_uring_sq_space_left ( Addressable ring) {
        var mh$ = io_uring_sq_space_left$MH();
        try {
            return (int)mh$.invokeExact(ring);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_sqring_wait$MH() {
        return RuntimeHelper.requireNonNull(constants$23.io_uring_sqring_wait$MH,"io_uring_sqring_wait");
    }
    public static int io_uring_sqring_wait ( Addressable ring) {
        var mh$ = io_uring_sqring_wait$MH();
        try {
            return (int)mh$.invokeExact(ring);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_cq_ready$MH() {
        return RuntimeHelper.requireNonNull(constants$23.io_uring_cq_ready$MH,"io_uring_cq_ready");
    }
    public static int io_uring_cq_ready ( Addressable ring) {
        var mh$ = io_uring_cq_ready$MH();
        try {
            return (int)mh$.invokeExact(ring);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_cq_has_overflow$MH() {
        return RuntimeHelper.requireNonNull(constants$23.io_uring_cq_has_overflow$MH,"io_uring_cq_has_overflow");
    }
    public static boolean io_uring_cq_has_overflow ( Addressable ring) {
        var mh$ = io_uring_cq_has_overflow$MH();
        try {
            return (boolean)mh$.invokeExact(ring);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_cq_eventfd_enabled$MH() {
        return RuntimeHelper.requireNonNull(constants$23.io_uring_cq_eventfd_enabled$MH,"io_uring_cq_eventfd_enabled");
    }
    public static boolean io_uring_cq_eventfd_enabled ( Addressable ring) {
        var mh$ = io_uring_cq_eventfd_enabled$MH();
        try {
            return (boolean)mh$.invokeExact(ring);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_cq_eventfd_toggle$MH() {
        return RuntimeHelper.requireNonNull(constants$23.io_uring_cq_eventfd_toggle$MH,"io_uring_cq_eventfd_toggle");
    }
    public static int io_uring_cq_eventfd_toggle ( Addressable ring,  boolean enabled) {
        var mh$ = io_uring_cq_eventfd_toggle$MH();
        try {
            return (int)mh$.invokeExact(ring, enabled);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_wait_cqe_nr$MH() {
        return RuntimeHelper.requireNonNull(constants$24.io_uring_wait_cqe_nr$MH,"io_uring_wait_cqe_nr");
    }
    public static int io_uring_wait_cqe_nr ( Addressable ring,  Addressable cqe_ptr,  int wait_nr) {
        var mh$ = io_uring_wait_cqe_nr$MH();
        try {
            return (int)mh$.invokeExact(ring, cqe_ptr, wait_nr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __io_uring_peek_cqe$MH() {
        return RuntimeHelper.requireNonNull(constants$24.__io_uring_peek_cqe$MH,"__io_uring_peek_cqe");
    }
    public static int __io_uring_peek_cqe ( Addressable ring,  Addressable cqe_ptr,  Addressable nr_available) {
        var mh$ = __io_uring_peek_cqe$MH();
        try {
            return (int)mh$.invokeExact(ring, cqe_ptr, nr_available);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_peek_cqe$MH() {
        return RuntimeHelper.requireNonNull(constants$24.io_uring_peek_cqe$MH,"io_uring_peek_cqe");
    }
    public static int io_uring_peek_cqe ( Addressable ring,  Addressable cqe_ptr) {
        var mh$ = io_uring_peek_cqe$MH();
        try {
            return (int)mh$.invokeExact(ring, cqe_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_wait_cqe$MH() {
        return RuntimeHelper.requireNonNull(constants$24.io_uring_wait_cqe$MH,"io_uring_wait_cqe");
    }
    public static int io_uring_wait_cqe ( Addressable ring,  Addressable cqe_ptr) {
        var mh$ = io_uring_wait_cqe$MH();
        try {
            return (int)mh$.invokeExact(ring, cqe_ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _io_uring_get_sqe$MH() {
        return RuntimeHelper.requireNonNull(constants$24._io_uring_get_sqe$MH,"_io_uring_get_sqe");
    }
    public static MemoryAddress _io_uring_get_sqe ( Addressable ring) {
        var mh$ = _io_uring_get_sqe$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ring);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_buf_ring_mask$MH() {
        return RuntimeHelper.requireNonNull(constants$24.io_uring_buf_ring_mask$MH,"io_uring_buf_ring_mask");
    }
    public static int io_uring_buf_ring_mask ( int ring_entries) {
        var mh$ = io_uring_buf_ring_mask$MH();
        try {
            return (int)mh$.invokeExact(ring_entries);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_buf_ring_init$MH() {
        return RuntimeHelper.requireNonNull(constants$25.io_uring_buf_ring_init$MH,"io_uring_buf_ring_init");
    }
    public static void io_uring_buf_ring_init ( Addressable br) {
        var mh$ = io_uring_buf_ring_init$MH();
        try {
            mh$.invokeExact(br);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_buf_ring_add$MH() {
        return RuntimeHelper.requireNonNull(constants$25.io_uring_buf_ring_add$MH,"io_uring_buf_ring_add");
    }
    public static void io_uring_buf_ring_add ( Addressable br,  Addressable addr,  int len,  short bid,  int mask,  int buf_offset) {
        var mh$ = io_uring_buf_ring_add$MH();
        try {
            mh$.invokeExact(br, addr, len, bid, mask, buf_offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_buf_ring_advance$MH() {
        return RuntimeHelper.requireNonNull(constants$25.io_uring_buf_ring_advance$MH,"io_uring_buf_ring_advance");
    }
    public static void io_uring_buf_ring_advance ( Addressable br,  int count) {
        var mh$ = io_uring_buf_ring_advance$MH();
        try {
            mh$.invokeExact(br, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_buf_ring_cq_advance$MH() {
        return RuntimeHelper.requireNonNull(constants$25.io_uring_buf_ring_cq_advance$MH,"io_uring_buf_ring_cq_advance");
    }
    public static void io_uring_buf_ring_cq_advance ( Addressable ring,  Addressable br,  int count) {
        var mh$ = io_uring_buf_ring_cq_advance$MH();
        try {
            mh$.invokeExact(ring, br, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_get_sqe$MH() {
        return RuntimeHelper.requireNonNull(constants$25.io_uring_get_sqe$MH,"io_uring_get_sqe");
    }
    public static MemoryAddress io_uring_get_sqe ( Addressable ring) {
        var mh$ = io_uring_get_sqe$MH();
        try {
            return (java.lang.foreign.MemoryAddress)mh$.invokeExact(ring);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_mlock_size$MH() {
        return RuntimeHelper.requireNonNull(constants$25.io_uring_mlock_size$MH,"io_uring_mlock_size");
    }
    public static long io_uring_mlock_size ( int entries,  int flags) {
        var mh$ = io_uring_mlock_size$MH();
        try {
            return (long)mh$.invokeExact(entries, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle io_uring_mlock_size_params$MH() {
        return RuntimeHelper.requireNonNull(constants$26.io_uring_mlock_size_params$MH,"io_uring_mlock_size_params");
    }
    public static long io_uring_mlock_size_params ( int entries,  Addressable p) {
        var mh$ = io_uring_mlock_size_params$MH();
        try {
            return (long)mh$.invokeExact(entries, p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int IORING_FILE_INDEX_ALLOC() {
        return (int)4294967295L;
    }
    public static int IOSQE_FIXED_FILE() {
        return (int)1L;
    }
    public static int IOSQE_IO_DRAIN() {
        return (int)2L;
    }
    public static int IOSQE_IO_LINK() {
        return (int)4L;
    }
    public static int IOSQE_IO_HARDLINK() {
        return (int)8L;
    }
    public static int IOSQE_ASYNC() {
        return (int)16L;
    }
    public static int IOSQE_BUFFER_SELECT() {
        return (int)32L;
    }
    public static int IOSQE_CQE_SKIP_SUCCESS() {
        return (int)64L;
    }
    public static int IORING_SETUP_IOPOLL() {
        return (int)1L;
    }
    public static int IORING_SETUP_SQPOLL() {
        return (int)2L;
    }
    public static int IORING_SETUP_SQ_AFF() {
        return (int)4L;
    }
    public static int IORING_SETUP_CQSIZE() {
        return (int)8L;
    }
    public static int IORING_SETUP_CLAMP() {
        return (int)16L;
    }
    public static int IORING_SETUP_ATTACH_WQ() {
        return (int)32L;
    }
    public static int IORING_SETUP_R_DISABLED() {
        return (int)64L;
    }
    public static int IORING_SETUP_SUBMIT_ALL() {
        return (int)128L;
    }
    public static int IORING_SETUP_COOP_TASKRUN() {
        return (int)256L;
    }
    public static int IORING_SETUP_TASKRUN_FLAG() {
        return (int)512L;
    }
    public static int IORING_SETUP_SQE128() {
        return (int)1024L;
    }
    public static int IORING_SETUP_CQE32() {
        return (int)2048L;
    }
    public static int IORING_SETUP_SINGLE_ISSUER() {
        return (int)4096L;
    }
    public static int IORING_SETUP_DEFER_TASKRUN() {
        return (int)8192L;
    }
    public static int IORING_FSYNC_DATASYNC() {
        return (int)1L;
    }
    public static int IORING_TIMEOUT_ABS() {
        return (int)1L;
    }
    public static int IORING_TIMEOUT_UPDATE() {
        return (int)2L;
    }
    public static int IORING_TIMEOUT_BOOTTIME() {
        return (int)4L;
    }
    public static int IORING_TIMEOUT_REALTIME() {
        return (int)8L;
    }
    public static int IORING_LINK_TIMEOUT_UPDATE() {
        return (int)16L;
    }
    public static int IORING_TIMEOUT_ETIME_SUCCESS() {
        return (int)32L;
    }
    public static int IORING_TIMEOUT_CLOCK_MASK() {
        return (int)12L;
    }
    public static int IORING_TIMEOUT_UPDATE_MASK() {
        return (int)18L;
    }
    public static int SPLICE_F_FD_IN_FIXED() {
        return (int)2147483648L;
    }
    public static int IORING_POLL_ADD_MULTI() {
        return (int)1L;
    }
    public static int IORING_POLL_UPDATE_EVENTS() {
        return (int)2L;
    }
    public static int IORING_POLL_UPDATE_USER_DATA() {
        return (int)4L;
    }
    public static int IORING_POLL_ADD_LEVEL() {
        return (int)8L;
    }
    public static int IORING_ASYNC_CANCEL_ALL() {
        return (int)1L;
    }
    public static int IORING_ASYNC_CANCEL_FD() {
        return (int)2L;
    }
    public static int IORING_ASYNC_CANCEL_ANY() {
        return (int)4L;
    }
    public static int IORING_ASYNC_CANCEL_FD_FIXED() {
        return (int)8L;
    }
    public static int IORING_RECVSEND_POLL_FIRST() {
        return (int)1L;
    }
    public static int IORING_RECV_MULTISHOT() {
        return (int)2L;
    }
    public static int IORING_RECVSEND_FIXED_BUF() {
        return (int)4L;
    }
    public static int IORING_ACCEPT_MULTISHOT() {
        return (int)1L;
    }
    public static int IORING_MSG_RING_CQE_SKIP() {
        return (int)1L;
    }
    public static int IORING_CQE_F_BUFFER() {
        return (int)1L;
    }
    public static int IORING_CQE_F_MORE() {
        return (int)2L;
    }
    public static int IORING_CQE_F_SOCK_NONEMPTY() {
        return (int)4L;
    }
    public static int IORING_CQE_F_NOTIF() {
        return (int)8L;
    }
    public static long IORING_OFF_SQ_RING() {
        return 0L;
    }
    public static long IORING_OFF_CQ_RING() {
        return 134217728L;
    }
    public static long IORING_OFF_SQES() {
        return 268435456L;
    }
    public static int IORING_SQ_NEED_WAKEUP() {
        return (int)1L;
    }
    public static int IORING_SQ_CQ_OVERFLOW() {
        return (int)2L;
    }
    public static int IORING_SQ_TASKRUN() {
        return (int)4L;
    }
    public static int IORING_CQ_EVENTFD_DISABLED() {
        return (int)1L;
    }
    public static int IORING_ENTER_GETEVENTS() {
        return (int)1L;
    }
    public static int IORING_ENTER_SQ_WAKEUP() {
        return (int)2L;
    }
    public static int IORING_ENTER_SQ_WAIT() {
        return (int)4L;
    }
    public static int IORING_ENTER_EXT_ARG() {
        return (int)8L;
    }
    public static int IORING_ENTER_REGISTERED_RING() {
        return (int)16L;
    }
    public static int IORING_FEAT_SINGLE_MMAP() {
        return (int)1L;
    }
    public static int IORING_FEAT_NODROP() {
        return (int)2L;
    }
    public static int IORING_FEAT_SUBMIT_STABLE() {
        return (int)4L;
    }
    public static int IORING_FEAT_RW_CUR_POS() {
        return (int)8L;
    }
    public static int IORING_FEAT_CUR_PERSONALITY() {
        return (int)16L;
    }
    public static int IORING_FEAT_FAST_POLL() {
        return (int)32L;
    }
    public static int IORING_FEAT_POLL_32BITS() {
        return (int)64L;
    }
    public static int IORING_FEAT_SQPOLL_NONFIXED() {
        return (int)128L;
    }
    public static int IORING_FEAT_EXT_ARG() {
        return (int)256L;
    }
    public static int IORING_FEAT_NATIVE_WORKERS() {
        return (int)512L;
    }
    public static int IORING_FEAT_RSRC_TAGS() {
        return (int)1024L;
    }
    public static int IORING_FEAT_CQE_SKIP() {
        return (int)2048L;
    }
    public static int IORING_FEAT_LINKED_FILE() {
        return (int)4096L;
    }
    public static int IORING_RSRC_REGISTER_SPARSE() {
        return (int)1L;
    }
    public static int IORING_REGISTER_FILES_SKIP() {
        return (int)-2L;
    }
    public static int IO_URING_OP_SUPPORTED() {
        return (int)1L;
    }
    public static long LIBURING_UDATA_TIMEOUT() {
        return -1L;
    }
}


