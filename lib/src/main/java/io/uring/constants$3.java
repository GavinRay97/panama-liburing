// Generated by jextract

package io.uring;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
class constants$3 {

    static final FunctionDescriptor name_to_handle_at$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle name_to_handle_at$MH = RuntimeHelper.downcallHandle(
        "name_to_handle_at",
        constants$3.name_to_handle_at$FUNC
    );
    static final FunctionDescriptor open_by_handle_at$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle open_by_handle_at$MH = RuntimeHelper.downcallHandle(
        "open_by_handle_at",
        constants$3.open_by_handle_at$FUNC
    );
    static final FunctionDescriptor fcntl$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle fcntl$MH = RuntimeHelper.downcallHandleVariadic(
        "fcntl",
        constants$3.fcntl$FUNC
    );
    static final FunctionDescriptor fcntl64$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle fcntl64$MH = RuntimeHelper.downcallHandleVariadic(
        "fcntl64",
        constants$3.fcntl64$FUNC
    );
    static final FunctionDescriptor open$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle open$MH = RuntimeHelper.downcallHandleVariadic(
        "open",
        constants$3.open$FUNC
    );
    static final FunctionDescriptor open64$FUNC = FunctionDescriptor.of(Constants$root.C_INT$LAYOUT,
        Constants$root.C_POINTER$LAYOUT,
        Constants$root.C_INT$LAYOUT
    );
    static final MethodHandle open64$MH = RuntimeHelper.downcallHandleVariadic(
        "open64",
        constants$3.open64$FUNC
    );
}


