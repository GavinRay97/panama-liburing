/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.6-20220805221950+0000/userguide/building_java_projects.html
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    `java-library`
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {

}


tasks.withType<Test>().configureEach {
    jvmArgs("--enable-preview")
    jvmArgs("--enable-native-access=ALL-UNNAMED")
    jvmArgs("--add-exports=java.base/jdk.internal.access=ALL-UNNAMED")
    jvmArgs("--add-exports=java.base/sun.nio.ch=ALL-UNNAMED")
    jvmArgs("--add-exports=jdk.unsupported/sun.misc=ALL-UNNAMED")
    jvmArgs("--add-opens=java.base/java.io=ALL-UNNAMED")
    jvmArgs("--add-opens=java.base/java.lang.reflect=ALL-UNNAMED")
    jvmArgs("--add-opens=java.base/java.lang=ALL-UNNAMED")
    jvmArgs("--add-opens=java.base/java.nio=ALL-UNNAMED")
    // jvmArgs("-Xlog:library=info")
}

tasks.withType<JavaCompile>().configureEach {
    options.compilerArgs.add("--enable-preview")
    options.compilerArgs.add("--add-exports=java.base/jdk.internal.access=ALL-UNNAMED")
    options.compilerArgs.add("--add-exports=java.base/jdk.internal.access=ALL-UNNAMED")
    options.compilerArgs.add("--add-exports=java.base/sun.nio.ch=ALL-UNNAMED")
    options.compilerArgs.add("--add-exports=jdk.unsupported/sun.misc=ALL-UNNAMED")
    options.compilerArgs.add("--add-opens=java.base/java.io=ALL-UNNAMED")
    options.compilerArgs.add("--add-opens=java.base/java.lang.reflect=ALL-UNNAMED")
    options.compilerArgs.add("--add-opens=java.base/java.lang=ALL-UNNAMED")
    options.compilerArgs.add("--add-opens=java.base/java.nio=ALL-UNNAMED")
}

tasks.withType<JavaExec>().configureEach {
    jvmArgs("--enable-preview")
    jvmArgs("--enable-native-access=ALL-UNNAMED")
    jvmArgs("--add-exports=java.base/jdk.internal.access=ALL-UNNAMED")
    jvmArgs("--add-exports=java.base/sun.nio.ch=ALL-UNNAMED")
    jvmArgs("--add-exports=jdk.unsupported/sun.misc=ALL-UNNAMED")
    jvmArgs("--add-opens=java.base/java.io=ALL-UNNAMED")
    jvmArgs("--add-opens=java.base/java.lang.reflect=ALL-UNNAMED")
    jvmArgs("--add-opens=java.base/java.lang=ALL-UNNAMED")
    jvmArgs("--add-opens=java.base/java.nio=ALL-UNNAMED")
    // jvmArgs("-Xlog:library=info")
    javaLauncher.set(project.javaToolchains.launcherFor(java.toolchain))
}

testing {
    suites {
        // Configure the built-in test suite
        val test by getting(JvmTestSuite::class) {
            // Use JUnit Jupiter test framework
            useJUnitJupiter("5.9.1")
        }
    }
}
